% Kerr geodesic without constants of motion
% Boyer Lindquist 
% Alexander Nieddu

function dx = kerrGeodesic(t, x)

% Angular momentum a = J/M (0..1)
a = .9;
% Mass
M = 1;

% Initial conditions for position and velocity
% -> (t, r, theta, phi, dt, dr, dtheta, dphi)
t       = x(1);
r       = x(2);
theta   = x(3);
phi     = x(4);
dt      = x(5);
dr      = x(6);
dtheta  = x(7);
dphi    = x(8);

% ODE derived from the geodesic equation for the kerr metric 
dx(1) = dt;
dx(2) = dr;
dx(3) = dtheta;
dx(4) = dphi;
dx(5) = -1/((a^2 + (-2 + r)*r) * (a^2*cos(theta)^2 + r^2)^2) * ...
        (2*a^2*r*(a^2 + (-2 + r^2))*sin(2*theta) * dtheta * ...
        (-dt + a*sin(theta)^2*dphi) + dr*(-2*(a^2*cos(theta)^2 - ...
        r^2)*(a^2 + r^2)*dt + a*(2*a^4*cos(theta)^2 - a^2*(3 + ...
        cos(2*theta))*r^2 - 6*r^4)*sin(theta)^2 * dphi));
    
dx(6) = 1/(a^2*cos(theta)^2 + r^2)^3 * (((a^2*cos(theta)^2 + r^2)^2 * ...
        (-a^2*cos(theta)^2 + r^2 - a^2*r*sin(theta)^2) * dr^2) / ...
        (a^2 + (-2 + r)*r) + 2*a^2*cos(theta)* (a^2*cos(theta)^2 + r^2)^2 * ...
        sin(theta)*dr*dtheta + 1 / 4 * (a^2 + (-2 + r)*r) * ...
        (4*(a^2*cos(theta)^2 - r^2)*dt^2 + 4*r*(a^2*cos(theta)^2 + r^2)^2*dtheta^2 + ...
        8*a*(-a^2*cos(theta)^2 + r^2)*sin(theta)^2*dt*dphi + ...
        sin(theta)^2 * (4*r*((a^2*cos(theta)^2 + r^2)^2 - ...
        a^2*r*sin(theta)^2) + a^4*sin(2*theta)^2)*dphi^2));
    
dx(7) = 1/(4*(a^2*cos(theta)^2 + r^2)^3) * (-(4*a^2*cos(theta) * ...
        (a^2*cos(theta)^2 + r^2)^2*sin(theta)*dr^2)/(a^2 + (-2 + r)*r) - ...
        8*r*(a^2*cos(theta)^2 + r^2)^2*dr*dtheta + 4*a^2*(r*sin(2*theta)* ...
        dt^2 + cos(theta)*(a^2*cos(theta)^2 + r^2)^2*sin(theta)*dtheta^2) - ...
        8*a*r*(a^2 + r^2)*sin(2*theta)*dt*dphi + (2*a^6*cos(theta)^4  + ...
        r*(a^4*cos(theta)^2*(5 + cos(2*theta))*r + 2*a^2*(2 + ...
        cos(2*theta))*r^3 + 2*r^5 + 2*a^2*(a^2*(3 + cos(2*theta)) + ...
        4*r^2)*sin(theta)^2))*sin(2*theta)*dphi^2);

dx(8) = -1/(2*(a^2 + (-2 + r)*r)*(a^2*cos(theta)^2 + r^2)^2) * ...
        (4*cot(theta)*(a^2 + (-2 + r)*r)*dtheta*(-2*a*r*dt + ...
        ((a^2*cos(theta)^2 + r^2)^2 + 2*a^2*r*sin(theta)^2)*dphi) + ...
        dr*(4*a*(-a^2*cos(theta)^2 + r^2)*dt + (4*a^4*cos(theta)^4 * r - ...
        2*a^2*(3 + cos(2*theta))*r^2 + 8*a^2*cos(theta)^2*r^3 - 8*r^4 + ...
        4*r^5 + a^4*sin(2*theta)^2)*dphi));

dx = dx';

end